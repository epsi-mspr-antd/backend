// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String

  roles     Role[]
  addresses Address[]
  plants    Plant[]
  guardians PlantGuardian[]
  tips      Tip[]
  session   Session?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  
  @@map("role")
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String?

  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])

  updatedAt DateTime @updatedAt

  @@map("session")
}

model Address {
  id        Int      @id @default(autoincrement())

  street    String
  zip       String
  city      String
  longitude String
  latitude  String

  plants    Plant[]

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("address")
}

model Plant {
  id        Int      @id @default(autoincrement())
  name      String

  guardians PlantGuardian[]
  photos    Photo[]
  tips      Tip[]

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  addressId Int
  address   Address  @relation(fields: [addressId], references: [id])
  statusId  Int
  status    PlantStatus @relation(fields: [statusId], references: [id])
  speciesId Int
  species   PlantSpecies @relation(fields: [speciesId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("plant")
}

model PlantStatus {
  id        Int      @id @default(autoincrement())
  name      String

  plants    Plant[]

  @@map("plant_status")
}

model PlantSpecies {
  id        Int      @id @default(autoincrement())
  name      String

  plants    Plant[]

  @@map("plant_species")
}

model PlantGuardian {
  id        Int      @id @default(autoincrement())
  from      DateTime
  to        DateTime

  plantId   Int
  plant     Plant    @relation(fields: [plantId], references: [id])
  guardId   Int
  guard     User     @relation(fields: [guardId], references: [id])

  @@map("plant_guardian")
}

model Photo {
  id        Int      @id @default(autoincrement())
  url       String

  plantId   Int
  plant     Plant    @relation(fields: [plantId], references: [id])

  createdAt DateTime @default(now())

  @@map("photo")
}

model Tip {
  id          Int      @id @default(autoincrement())
  description String

  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  plantId     Int
  plant       Plant    @relation(fields: [plantId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tip")
}
